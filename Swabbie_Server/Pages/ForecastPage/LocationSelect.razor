<MudCard>
    @foreach (var location in Locations){
    <MudCardContent>
        <MudAvatar Rounded="true" Image="@location.countryFlagImgSrc" Size="Size.Large"/>
        <MudText>@location.name</MudText>
        <MudText Typo="Typo.body2">@location.state - @location.country</MudText>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => OnSelectLocation.InvokeAsync(location)">Select</MudButton>
    </MudCardContent>}
</MudCard>

<div class="card-group">
    @foreach (var location in Locations)
    {
        <div class="card">
            <div class="card-body">
                <p class="card-title d-inline">
                    @location.name
                </p>
                <p class="d-inline">
                    <img src="@location.countryFlagImgSrc" class="mb-1" height="15" />
                </p>
                <p class="card-text">@location.state - @location.country</p>
            </div>
            <div class="card-footer text-center">
                <button class="btn btn-primary" @onclick="() => OnSelectLocation.InvokeAsync(location)">Select</button>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public IEnumerable<LocationDTO> Locations { get; set; }
    [Parameter] public EventCallback<LocationDTO> OnSelectLocation { get; set; }
}