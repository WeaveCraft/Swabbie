@inject IOpenWeatherService _openWeatherService

<EditForm Model="@locationSearch" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <MudTextField @bind-Value="ReadOnly" ReadOnly="true" Variant="Variant.Text" />
    <MudTextField @bind-Value="locationSearch.Location" Label="City" Variant="Variant.Outlined"></MudTextField>

    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleValidSubmit">Search</MudButton>

</EditForm>

@if (locations != null)
{
    <LocationSelect Locations="locations"
                OnSelectLocation="HandleOnSelectLocation" />
}

@code {
    @*[Inject] IOpenWeatherService OpenWeatherService { get; set; }*@
    [Parameter] public EventCallback<LocationDTO> OnSelectLocation { get; set; }

    LocationSearchDTO locationSearch = new();
    IEnumerable<LocationDTO>? locations;

    private async Task HandleValidSubmit() =>
        locations = await _openWeatherService.GetLocations(locationSearch);

    private async Task HandleOnSelectLocation(LocationDTO location) =>
        await OnSelectLocation.InvokeAsync(location);

    public string ReadOnly = "Enter a Location";
}